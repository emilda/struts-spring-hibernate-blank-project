<?xml version="1.0"?>
<!-- ====================================================================== 
     Date:     January 2012     
     Project:  Basic Application 
     Author:   Sindhu Emilda
     ====================================================================== -->
	
<project name="Sample Project" default="war" basedir=".">
	
    <description>
           Smple Web Application
    </description>
	
	<property file="build.properties"/>
	<property name="conf.dir" value="conf"/>
	<property name="etc.dir" value="etc"/>
	<property name="classes.dir" value="${build.home}/WEB-INF/classes"/>
    	
	<!-- ==================== Clean Target ==================================== -->
	<!--
	  The "clean" target deletes any previous "build" and "dist" directory,
	  so that you can be ensured the application can be built from scratch.
	-->
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${dist.home}"/>
		<delete dir="${build.home}"/>
	</target>

	<!-- ==================== Init Target ================================== -->
	<!--
	  The "init" target is used to create the "build" destination directory,
	  Normally, this task is executed indirectly when needed
	-->
	<target name="init" depends="clean"  description="Create build directory">		
		<mkdir dir="${build.home}" />
	</target>
	
	<!-- =================================================================== -->
    <!-- Build classpath , db schema lib classpath, utest classpath          -->
    <!-- =================================================================== -->
    <path id="build.classpath">
    	<fileset dir="${lib.home}" />
    	<fileset dir="${lib.external}" />
    </path>
	<!-- ==================== Compile Target ================================== -->
	<!--

	  The "compile" target transforms source files (from your "src" directory)
	  into class files in the appropriate location in the build directory.
	  This example assumes that you will be including your classes in an
	  unpacked directory hierarchy under "/WEB-INF/classes".
	-->
	<!-- Normal build of application -->
	
	<target name="compile" depends="init" description="Compile Java sources">	
		<mkdir dir="${build.home}/WEB-INF/classes" />
		
		<javac srcdir="${source.home}"
				destdir="${build.home}/WEB-INF/classes"
				debug="${compile.debug}"
				deprecation="${compile.deprecation}"
				includeantruntime="false" 
				optimize="${compile.optimize}"
			     source="1.6" target="1.6">
			
			<classpath refid="build.classpath"/>
			
		</javac>
	</target>
	
	<!-- ==================== Build Target ================================== -->
	<!--
	  The "build" target copies all non class files to build directory
	-->	
	<target name="build" depends="compile" description="Copies all non Java classes to build directoy">
		<copy todir="${build.home}">
			<fileset dir="${webapp.home}" excludes="CVS,**/*.class" />
		</copy>
		<copy todir="${classes.dir}">
			<fileset dir="${source.home}" excludes="CVS,**/*.java" />
		</copy>
		<copy todir="${classes.dir}">
			<fileset dir="${conf.dir}">
		    	<include name="**/*.*"/>
		    </fileset>
		</copy>
		<copy todir="${classes.dir}">
            <fileset dir="${etc.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
	</target>
	
	<!-- ==================== War Target ================================== -->
	<!--
	  The "war" target create a binary archive of all files in build.home
	-->

	<target name="war" depends="build" description="Create binary archive of all files in dist.home">	
		<mkdir dir="${dist.home}" />		
		<!-- Create application WAR file -->
	    <jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}" />
	</target>	
	
</project>

